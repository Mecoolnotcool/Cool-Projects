let canvas = document.getElementById('canvas');
let ctx = canvas.getContext('2d');

const drawer = {
    drawnItems:{},
    createBox: function(x,y,id,color,width,height){
        box = new this.boxClass(x,y,id,color,width,height);
        box.type = 'box'
        this.drawnItems[id] = box
        
    },
    drawBox: function(x,y,color,width,height){
        ctx.fillStyle = color;
        ctx.fillRect(x,y,width,height);
    },
    drawloop: function(){
        ctx.clearRect(0,0,1000,1000)
        Object.keys(this.drawnItems).forEach(key => {
            let toDraw = this.drawnItems[key]; 
            this.drawBox(toDraw.x,toDraw.y,toDraw.color,toDraw.width,toDraw.height);
        });
        requestAnimationFrame(this.drawloop.bind(this));
    },     
    boxClass: class{
        constructor(x,y,id,color,width,height){
            this.x = x;
            this.y = y;
            this.id = id;
            this.color  = color;
            this.width = width;
            this.height = height;
        }
    }
};

drawer.createBox(10,10,'box1','red',100,100)
drawer.createBox(10,120,'box2','purple',100,100)
drawer.createBox(10,230,'box3','teal',100,100)
drawer.createBox(10,340,'box4','black',100,100)

requestAnimationFrame(() => drawer.drawloop());

let canvas = document.getElementById('Canvas');
let ctx = canvas.getContext('2d');

class buttonBase {
    constructor(id,height,width,x,y){
        this.id = id; //must be unique
        this.height = height;
        this.width = width;
        this.x = x;
        this.y = y;
    }
}

const ButtonCreator = {
    rect : canvas.getBoundingClientRect(),

    buttonList : {},
    createButton:function(id,width,height,x,y){
        const button = new  buttonBase(id,width,height,x,y);
        this.buttonlist[id] = button
        console.log("Creating a button with id", id);
    },
    drawButton:function() {

    },
    handleClick:function(Ex,Ey) {
       let mouseX = Ex - this.rect.left;
       let mouseY = Ey - this.rect.top;
       this.checkCollision(mouseX,mouseY);
    },
    checkCollision:function(Ex,Ey) {
        let mouseX = Ex - this.rect.left;
        let mouseY = Ey - this.rect.top;

        for (const key in this.buttonList) {
            let button = this.buttonList[key];
            if (mouseX >= button.x && mouseX <= button.width + button.x){
                console.log('true')
            }
        }
    },
        
}

ButtonCreator.createButton('button1',100,100,0,0)

console.log('Trying oop')
canvas.addEventListener('mousemove', (event) => {
    ButtonCreator.checkCollision(event.x,event.y)
})
